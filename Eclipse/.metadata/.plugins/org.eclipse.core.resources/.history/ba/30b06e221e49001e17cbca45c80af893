/******************************************************************************
 *
 * Module: Common - Platform Types Abstraction
 *
 * File Name: CURT.c
 *
 * Description: types for AVR
 *
 * Date Created: 1/9/2023
 *
 * Author: Moustafa Ahmed Adel
 *
 *******************************************************************************/
/**-------------------------INCLUDES Section------------------------**/

#include <stdio.h>
#include "../HAL/Header/DcMotor.h"
#include "../HAL/Header/buzzer.h"
#include "../HAL/Header/LCD.h"
#include "../Libraries/Libraries.h"
#include "../Libraries/std_types.h"
#include "../MCAL/Header/TIMER.h"
#include "../MCAL/Header/UART.h"
#include "../MCAL/Header/ADC.h"
/**-------------------------Extern  Section-------------------------**/

/**-------------------------Global  Section-------------------------**/

/**-------------------------STRUCTURES------------------------------**/


/**-------------------------Function Dec. Section-------------------**/

/*-------------------------------------------------------------------*/


/**-------------------------Function Section------------------------**/
/* Initializing all drivers */
void Drivers_init(void)
{
	/* Initializing ADC */
	ADC_ConfigType ADC_Config = {AVCC, F_ADC128};
	ADC_init(&ADC_Config);
	/* Initializing LCD */
	LCD_init();
	/* ------------------------------------------------------------------ */
	/* Activating Interrupt system */
	SREG |= (1<<7);
}

/* ------------------------------------------------------------------ */

int main()
{
	/**-----------------------Local Variables----------------------**/
	uint16 Potentiometer_Val = 0;

	/**-----------------------Pre-start Section--------------------**/

	/* Initializing all drivers: UART, DCMotor, Timer0, LCD, Stepper Motor */
	Drivers_init();

	/**-----------------------Main Section-------------------------**/
	/* Display this string "ADC Value = " only once on LCD at the first row */
	LCD_displayString("ADC Value = ");
	while(1)
	{
		/* Read ADC channel 0 where the potentiometer is connected */
		Potentiometer_Val = ADC_readChannel(0);

				/* Display the ADC digital value every time at same position */
				LCD_moveCursor(0,12);
				if(Potentiometer_Val >= 1000)
				{
					LCD_intgerToString(Potentiometer_Val);
				}
				else
				{
					LCD_intgerToString(Potentiometer_Val);
					/* In case the digital value is three or two or one digits print space in the next digit place */
					LCD_displayCharacter(' ');
				}
	}

	return 0;
}
/**-------------------------END MAIN--------------------------------**/

/**-------------------------Function Section------------------------**/

/*-------------------------------------------------------------------*/

/*-------------------------------------------------------------------*/
