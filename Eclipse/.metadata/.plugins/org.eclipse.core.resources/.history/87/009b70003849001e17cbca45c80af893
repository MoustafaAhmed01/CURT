/******************************************************************************
 *
 * Module: Common - Platform Types Abstraction
 *
 * File Name: CURT.c
 *
 * Description: types for AVR
 *
 * Date Created: 1/9/2023
 *
 * Author: Moustafa Ahmed Adel
 *
 *******************************************************************************/
/**-------------------------INCLUDES Section------------------------**/

#include <stdio.h>
#include "../HAL/Header/DcMotor.h"
#include "../HAL/Header/lM35_TempSensor.h"
#include "../HAL/Header/external_eeprom.h"
#include "../HAL/Header/LCD.h"
#include "../Libraries/Libraries.h"
#include "../Libraries/std_types.h"
#include "../MCAL/Header/TIMER.h"
#include "../MCAL/Header/UART.h"
#include "../MCAL/Header/ADC.h"
#include "../MCAL/Header/TWI.h"
#include "../MCAL/Header/interrupt.h"

/**-------------------------Macros----------------------------------**/
#define CONTROL_READY 0x10
/**-------------------------Extern  Section-------------------------**/

/**-------------------------Global  Section-------------------------**/
/*
 * Description:
 *  Initializing Timer1 to be used in Emergency state
 *  Configurations will be discussed @ Drivers_Init() function
 *  Interrupt every 500ms
 */
Timer1_ConfigType TIMER1_Config = {Normal_A,Normal_B,Channel_A_ON,Channel_B_OFF,TIMER1_FALLING_EDGE,NOISE_CANCELER_OFF,F_TIMER11024,CTC_OCR1A,ENABLE_INTERRUPT,DISABLE_INTERRUPT,DISABLE_INTERRUPT,0,7813,0};
/**-------------------------STRUCTURES------------------------------**/


/**-------------------------Function Dec. Section-------------------**/
/*
 * Description:
 * Will be called when the push button is used (Interrupt)
 */
void INT0_Handler(void);
/* ---------------------------------------- */

/*
 * Description:
 * Will be called when Timer1 interrupts
 */
void Timer1_Handler(void);

/*-------------------------------------------------------------------*/


/**-------------------------Function Section------------------------**/
/* Initializing all drivers */
void Drivers_init(void)
{

	/* Initializing ADC */
	/*
	 * ADC_ReferenceVoltage : AVCC
	 * ADC_Prescaler : F_CPU/128
	 */
	ADC_ConfigType ADC_Config = {AVCC, F_ADC128};
	ADC_init(&ADC_Config);
	/* ---------------------------------------- */

	/* Initializing LCD just for TEST*/
	LCD_init();
	/* ---------------------------------------- */

	/* Initializing UART */
	/*
	 * UART_trSpeed : Double Speed
	 * UART_RECEIVE_INT : No
	 * UART_TRANSMIT_INT : No
	 * UART_EMPTY_INT : No
	 * UART_RECEIVER : Yes
	 * UART_TRANSMITTER : Yes
	 * UART_CharSize : 8-bit
	 * UART_REG_SELECT : UBRRH
	 * UART_MODE_SELECT : A-sync
	 * UART_PARITY_SELECT : No
	 * UART_STOP_BIT_SELECT : 1-bit
	 * UART_CLOCK_POLARITY : A-sync Rising
	 * baud_rate : 9600
	 *
	 */
	UART_ConfigType UART_Config = {DOUBLE_TR_SPEED,RECEIVE_INT_EN_OFF,TRANSMIT_INT_EN_OFF,EMPTY_INT_EN_OFF,RECEIVER_EN_ON,TRANSMITTER_EN_ON,EIGHT_BIT,UBRRH_REG,ASYNCHRONOUS,PARITY_DISABLE,ONE_BIT,A_Sync_RISING_EDGE,9600};
	UART_init(&UART_Config);
	/* ---------------------------------------- */

	/* Initializing TWI */
	/*
	 * file name: twi.h
	 *  -> Structure Configuration:
	 *
	 *  interruptControl : No
	 *  ackControl : No
	 *  twiControl : Yes
	 *  prescalerControl : 1
	 *  callRecControl : No
	 *  address : 0x01
	 *  bit_rate : 400,000 Kbps
	 */
	TWI_ConfigType TWI_Config = {TWI_INT_DISABLED, ACK_OFF, TWI_ENABLED,F_I2C_4, CALL_RECOGNITION_OFF,1,3};
	TWI_init(&TWI_Config);
	/* ---------------------------------------- */

	/* Initializing Timer 1 */
	/*
	 * file name: TIMER.h
	 *  -> Structure Configuration:
	 *
	 *  CompareModeA : Normal
	 *  CompareModeB : Normal
	 *  ForceCompareA : Activated
	 *  ForceCompareB : Disabled
	 *  EdgeControl : ---
	 *  NoiseControl : Disabled
	 *  F_TIMER1_CLOCK : F_CPU/1024
	 *  WaveForm : CTC mode ,TOP: OCR1A
	 *  interruptA : Enabled
	 *  interruptB : Disabled
	 *  interruptOvf : Disabled
	 *  TCNT1_Value : 0
	 *  OCR1A_Value : 7813
	 *  OCR1B_Value : ---
	 */
	/* Setting the callback function*/
	Timer1_setCallBackONE(Timer1_Handler);
	/* ---------------------------------------- */

	/* Initializing FAN */
	DCMotor_init();
	/* ---------------------------------------- */

	/* Initializing Interrupt zero for the Push Button */
	/*
	 * interruptZeroEN :	Enabled
	 * interruptOneEN  : 	Disabled
	 * interruptTwoEN  : 	Disabled
	 * controlZero :		Rising
	 * controlOne  :		----
	 * controlTwo  :		----
	 *
	 */
	INT_ConfigType INT0_Config = {INT0_ENABLE, INT1_DISABLE, INT2_DISABLE, RISING_EDGE,0,0};
	INT0_Init(&INT0_Config);
	/* ---------------------------------------- */

	/* Activating Interrupt system */
	SREG |= (1<<7);
}

/* ------------------------------------------------------------------ */

int main()
{
	/**-----------------------Local Variables----------------------**/

	/**-----------------------Pre-start Section--------------------**/

	/* Initializing all drivers: UART, DCMotor, Timer0, LCD, Stepper Motor */
	Drivers_init();

	/**-----------------------Main Section-------------------------**/


	while(1)
	{

	}

	return 0;
}
/**-------------------------END MAIN--------------------------------**/

/**-------------------------Function Section------------------------**/

/*-------------------------------------------------------------------*/

/*-------------------------------------------------------------------*/
